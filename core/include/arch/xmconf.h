/*
 * $FILE: xmconf.h
 *
 * Config parameters for both, XM and partitions
 *
 * $VERSION$
 *
 * $AUTHOR$
 *
 * $LICENSE:
 * COPYRIGHT (c) Fent Innovative Software Solutions S.L.
 *     Read LICENSE.txt file for the license terms.
 */

#ifndef _XM_ARCH_XMCONF_H_
#define _XM_ARCH_XMCONF_H_

#define XM_HM_EV_X86_DIVIDE_ERROR (XM_HM_MAX_GENERIC_EVENTS+0)
#define XM_HM_EV_X86_DEBUG (XM_HM_MAX_GENERIC_EVENTS+1)
#define XM_HM_EV_X86_NMI_INTERRUPT (XM_HM_MAX_GENERIC_EVENTS+2)
#define XM_HM_EV_X86_BREAKPOINT (XM_HM_MAX_GENERIC_EVENTS+3)
#define XM_HM_EV_X86_OVERFLOW (XM_HM_MAX_GENERIC_EVENTS+4)
#define XM_HM_EV_X86_BOUND_RANGE_EXCEEDED (XM_HM_MAX_GENERIC_EVENTS+5)
#define XM_HM_EV_X86_INVALID_OPCODE (XM_HM_MAX_GENERIC_EVENTS+6)
#define XM_HM_EV_X86_DEVICE_NOT_AVAILABLE (XM_HM_MAX_GENERIC_EVENTS+7)
#define XM_HM_EV_X86_DOUBLE_FAULT (XM_HM_MAX_GENERIC_EVENTS+8)
#define XM_HM_EV_X86_COPROCESSOR_SEGMENT_OVERRUN (XM_HM_MAX_GENERIC_EVENTS+9)
#define XM_HM_EV_X86_INVALID_TSS (XM_HM_MAX_GENERIC_EVENTS+10)
#define XM_HM_EV_X86_SEGMENT_NOT_PRESENT (XM_HM_MAX_GENERIC_EVENTS+11)
#define XM_HM_EV_X86_STACK_FAULT (XM_HM_MAX_GENERIC_EVENTS+12)
#define XM_HM_EV_X86_GENERAL_PROTECTION (XM_HM_MAX_GENERIC_EVENTS+13)
#define XM_HM_EV_X86_PAGE_FAULT (XM_HM_MAX_GENERIC_EVENTS+14)
#define XM_HM_EV_X86_X87_FPU_ERROR (XM_HM_MAX_GENERIC_EVENTS+16)
#define XM_HM_EV_X86_ALIGNMENT_CHECK (XM_HM_MAX_GENERIC_EVENTS+17)
#define XM_HM_EV_X86_MACHINE_CHECK (XM_HM_MAX_GENERIC_EVENTS+18)
#define XM_HM_EV_X86_SIMD_FLOATING_POINT (XM_HM_MAX_GENERIC_EVENTS+19)

#define XM_HM_MAX_EVENTS (XM_HM_MAX_GENERIC_EVENTS+20)

struct xmcHpvArch {
};

struct xmcPartitionArch {
};

struct xmcIoPort {
    xm_u32_t map[2048];
};

#endif
